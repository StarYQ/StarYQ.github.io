name: Deploy to Cloudflare Workers

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy-worker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.2.1

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y m4 pkg-config libgmp-dev

      - name: Install OCaml dependencies
        run: opam install . --deps-only -y

      - name: Build OCaml project (production)
        run: opam exec -- make build-prod

      - name: Prepare for Workers deployment
        run: |
          # First verify the OCaml build output exists
          echo "=== Checking OCaml build output ==="
          ls -la _build/default/lib/client_main/ || echo "ERROR: OCaml build output not found!"
          
          # Install npm dependencies
          npm ci
          
          # Run the build:worker script which will copy files to dist
          echo "=== Running build:worker script ==="
          npm run build:worker
          
          # Verify dist directory was created properly
          echo "=== Verifying dist directory ==="
          ls -la dist/
          echo "=== Checking dist/_build structure ==="
          find dist -type f -name "*.js" -o -name "*.html" -o -name "*.pdf" | head -20

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
          wranglerVersion: '4'
          workingDirectory: '.'
          
      - name: Deploy comment
        uses: actions/github-script@v7
        if: github.event_name == 'push'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commit = context.sha.substring(0, 7);
            const message = `âœ… Deployed to Cloudflare Workers (commit: ${commit})`;
            console.log(message);